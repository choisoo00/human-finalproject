# yml 문법(properties보다 가독성이 좋고 편리한 기능을 제공)
# 1. key: value로 이루어짐.
# 2. hiarachy를 표현할 때는 들여쓰기로 표현(2칸)
# 3. application.yml과 application.properties는 같이 사용할 수 없음
#    -> 만약에 2개의 파일이 동시에 있다면 우선순위는 appication.properties가 높음
server:
  port: 8529
  servlet:
    encoding:
      force: true 


spring:
  # jsp파일을 찾을 때 사용하는 경로
  mvc:
    view:
      prefix: /WEB-INF/views/
      suffix: .jsp

  sql:
    init:
      mode: always

  application:
    name: shinwoo_system

  jpa:
    hibernate:
      ddl-auto: update
    defer-datasource-initialization: true
    properties:
      hibernate:
        format_sql: true

#  h2:
#    console:
#      enabled: true

# Thymeleaf (1. 루트폴더 변경, 2. 타임리프 캐시 설정 변경)
  thymeleaf:
    prefix: classpath:templates/thymeleaf/
    check-template-location: true
    suffix: .html
    mode: HTML
    cache: false # default true, 개발 시에는 false로 두는 것이 좋음. 수정내용이 바로 반영되도록 함.

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_OAUTH_CLIENT_ID}
            client-secret: ${GOOGLE_OAUTH_SECRET}
            scope:
              - email
              - profile
            redirect-uri: "http://localhost:8529/login/oauth2/code/google"
          naver:
            client-id: ${NAVER_OAUTH_CLIENT_ID}
            client-secret: ${NAVER_OAUTH_SECRET}
            scope:
              - name
              - email
              - profile_image
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8529/login/oauth2/code/naver
          kakao:
            client-id: ${KAKAO_OAUTH_CLIENT_ID}
            client-secret: ${KAKAO_OAUTH_CLIENT_SECRET}
            scope:
              - profile_nickname
#              - account_email
              - profile_image
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8529/login/oauth2/code/kakao
            client-authentication-method: client_secret_post

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
  #          이걸 치면 네이버 로그인으로 된다는 뜻. 프로바이더를 네이버로 지정하겠다는 뜻.
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
  #          프로필 정보를 받으려면 이 주소를 호출해야함
            user-name-attribute: response
  #          회원정보를 json으로 받는데, 리스판스라는 키값으로 네이버가 리턴해줌
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            #          이걸 치면 네이버 로그인으로 된다는 뜻. 프로바이더를 네이버로 지정하겠다는 뜻.
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            #          프로필 정보를 받으려면 이 주소를 호출해야함
            user-name-attribute: id
  #          회원정보를 json으로 받는데, 리스판스라는 키값으로 네이버가 리턴해줌
logging:
  level:
    org:
      hibernate:
        SQL: DEBUG
        type:
          descriptor:
            sql:
              BasicBinder: TRACE

